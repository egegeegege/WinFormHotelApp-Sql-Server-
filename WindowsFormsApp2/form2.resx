<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>